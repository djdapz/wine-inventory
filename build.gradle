buildscript {

    ext.kotlin_version = '1.3.0'
    ext.spring_boot_version = '2.1.0.RELEASE'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'org.springframework.boot'

def determineVersion(){
    if(System.env.BUILD_VERSION  == null){
        return "NO_VERSION"
    }

    return "$System.env.BUILD_VERSION"
}

archivesBaseName = "luke-dapuzzo"
version = determineVersion()

repositories {
    jcenter()
}

dependencies {

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0")
    compile("com.fasterxml.jackson.core:jackson-core:2.9.2")
    compile("commons-validator:commons-validator:1.4.0")
    compile("org.flywaydb:flyway-core:4.1.0")
    compile("org.postgresql:postgresql:9.4.1212.jre7")
    compile("org.springframework.boot:spring-boot-starter-jdbc:$spring_boot_version")
    compile("org.springframework.boot:spring-boot-starter-webflux:$spring_boot_version")

    testCompile("com.nhaarman:mockito-kotlin-kt1.1:1.5.0")
    testCompile("io.rest-assured:rest-assured:3.0.5")
    testCompile("org.jetbrains.kotlin:kotlin-test")
    testCompile("org.jetbrains.kotlin:kotlin-test-junit")
    testCompile("com.github.javafaker:javafaker:0.14")
    testCompile("org.skyscreamer:jsonassert:1.5.0")
    testCompile("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")

}